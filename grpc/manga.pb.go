// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: manga.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MangaListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Tag           string                 `protobuf:"bytes,2,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Filter        Filter                 `protobuf:"varint,3,opt,name=Filter,proto3,enum=mangaweb4.types.Filter" json:"Filter,omitempty"`
	Page          int32                  `protobuf:"varint,4,opt,name=Page,proto3" json:"Page,omitempty"`
	ItemPerPage   int32                  `protobuf:"varint,5,opt,name=ItemPerPage,proto3" json:"ItemPerPage,omitempty"`
	Search        string                 `protobuf:"bytes,6,opt,name=Search,proto3" json:"Search,omitempty"`
	Sort          SortField              `protobuf:"varint,7,opt,name=Sort,proto3,enum=mangaweb4.types.SortField" json:"Sort,omitempty"`
	Order         SortOrder              `protobuf:"varint,8,opt,name=Order,proto3,enum=mangaweb4.types.SortOrder" json:"Order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaListRequest) Reset() {
	*x = MangaListRequest{}
	mi := &file_manga_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaListRequest) ProtoMessage() {}

func (x *MangaListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaListRequest.ProtoReflect.Descriptor instead.
func (*MangaListRequest) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{0}
}

func (x *MangaListRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MangaListRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *MangaListRequest) GetFilter() Filter {
	if x != nil {
		return x.Filter
	}
	return Filter_FILTER_UNKNOWN
}

func (x *MangaListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MangaListRequest) GetItemPerPage() int32 {
	if x != nil {
		return x.ItemPerPage
	}
	return 0
}

func (x *MangaListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *MangaListRequest) GetSort() SortField {
	if x != nil {
		return x.Sort
	}
	return SortField_SORT_FIELD_NAME
}

func (x *MangaListRequest) GetOrder() SortOrder {
	if x != nil {
		return x.Order
	}
	return SortOrder_SORT_ORDER_ASCENDING
}

type MangaListResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	TagFavorite   bool                     `protobuf:"varint,1,opt,name=TagFavorite,proto3" json:"TagFavorite,omitempty"`
	TotalPage     int32                    `protobuf:"varint,2,opt,name=TotalPage,proto3" json:"TotalPage,omitempty"`
	Items         []*MangaListResponseItem `protobuf:"bytes,3,rep,name=Items,proto3" json:"Items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaListResponse) Reset() {
	*x = MangaListResponse{}
	mi := &file_manga_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaListResponse) ProtoMessage() {}

func (x *MangaListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaListResponse.ProtoReflect.Descriptor instead.
func (*MangaListResponse) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{1}
}

func (x *MangaListResponse) GetTagFavorite() bool {
	if x != nil {
		return x.TagFavorite
	}
	return false
}

func (x *MangaListResponse) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *MangaListResponse) GetItems() []*MangaListResponseItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type MangaListResponseItem struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	IsFavorite     bool                   `protobuf:"varint,3,opt,name=IsFavorite,proto3" json:"IsFavorite,omitempty"`
	IsRead         bool                   `protobuf:"varint,4,opt,name=IsRead,proto3" json:"IsRead,omitempty"`
	PageCount      int32                  `protobuf:"varint,5,opt,name=PageCount,proto3" json:"PageCount,omitempty"`
	HasFavoriteTag bool                   `protobuf:"varint,6,opt,name=HasFavoriteTag,proto3" json:"HasFavoriteTag,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MangaListResponseItem) Reset() {
	*x = MangaListResponseItem{}
	mi := &file_manga_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaListResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaListResponseItem) ProtoMessage() {}

func (x *MangaListResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaListResponseItem.ProtoReflect.Descriptor instead.
func (*MangaListResponseItem) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{2}
}

func (x *MangaListResponseItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MangaListResponseItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MangaListResponseItem) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *MangaListResponseItem) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *MangaListResponseItem) GetPageCount() int32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *MangaListResponseItem) GetHasFavoriteTag() bool {
	if x != nil {
		return x.HasFavoriteTag
	}
	return false
}

type MangaThumbnailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaThumbnailRequest) Reset() {
	*x = MangaThumbnailRequest{}
	mi := &file_manga_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaThumbnailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaThumbnailRequest) ProtoMessage() {}

func (x *MangaThumbnailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaThumbnailRequest.ProtoReflect.Descriptor instead.
func (*MangaThumbnailRequest) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{3}
}

func (x *MangaThumbnailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MangaThumbnailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentType   string                 `protobuf:"bytes,1,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaThumbnailResponse) Reset() {
	*x = MangaThumbnailResponse{}
	mi := &file_manga_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaThumbnailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaThumbnailResponse) ProtoMessage() {}

func (x *MangaThumbnailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaThumbnailResponse.ProtoReflect.Descriptor instead.
func (*MangaThumbnailResponse) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{4}
}

func (x *MangaThumbnailResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *MangaThumbnailResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MangaDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaDetailRequest) Reset() {
	*x = MangaDetailRequest{}
	mi := &file_manga_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaDetailRequest) ProtoMessage() {}

func (x *MangaDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaDetailRequest.ProtoReflect.Descriptor instead.
func (*MangaDetailRequest) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{5}
}

func (x *MangaDetailRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MangaDetailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MangaDetailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Favorite      bool                   `protobuf:"varint,2,opt,name=Favorite,proto3" json:"Favorite,omitempty"`
	PageCount     int32                  `protobuf:"varint,3,opt,name=PageCount,proto3" json:"PageCount,omitempty"`
	CurrentPage   int32                  `protobuf:"varint,4,opt,name=CurrentPage,proto3" json:"CurrentPage,omitempty"`
	Tags          []string               `protobuf:"bytes,5,rep,name=Tags,proto3" json:"Tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaDetailResponse) Reset() {
	*x = MangaDetailResponse{}
	mi := &file_manga_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaDetailResponse) ProtoMessage() {}

func (x *MangaDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaDetailResponse.ProtoReflect.Descriptor instead.
func (*MangaDetailResponse) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{6}
}

func (x *MangaDetailResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MangaDetailResponse) GetFavorite() bool {
	if x != nil {
		return x.Favorite
	}
	return false
}

func (x *MangaDetailResponse) GetPageCount() int32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *MangaDetailResponse) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *MangaDetailResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type MangaSetFavoriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Favorite      bool                   `protobuf:"varint,3,opt,name=Favorite,proto3" json:"Favorite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaSetFavoriteRequest) Reset() {
	*x = MangaSetFavoriteRequest{}
	mi := &file_manga_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaSetFavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaSetFavoriteRequest) ProtoMessage() {}

func (x *MangaSetFavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaSetFavoriteRequest.ProtoReflect.Descriptor instead.
func (*MangaSetFavoriteRequest) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{7}
}

func (x *MangaSetFavoriteRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MangaSetFavoriteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MangaSetFavoriteRequest) GetFavorite() bool {
	if x != nil {
		return x.Favorite
	}
	return false
}

type MangaSetFavoriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Favorite      bool                   `protobuf:"varint,2,opt,name=Favorite,proto3" json:"Favorite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaSetFavoriteResponse) Reset() {
	*x = MangaSetFavoriteResponse{}
	mi := &file_manga_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaSetFavoriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaSetFavoriteResponse) ProtoMessage() {}

func (x *MangaSetFavoriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaSetFavoriteResponse.ProtoReflect.Descriptor instead.
func (*MangaSetFavoriteResponse) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{8}
}

func (x *MangaSetFavoriteResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MangaSetFavoriteResponse) GetFavorite() bool {
	if x != nil {
		return x.Favorite
	}
	return false
}

type MangaUpdateCoverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Index         int32                  `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	X             int32                  `protobuf:"varint,3,opt,name=X,proto3" json:"X,omitempty"`
	Y             int32                  `protobuf:"varint,4,opt,name=Y,proto3" json:"Y,omitempty"`
	Width         int32                  `protobuf:"varint,5,opt,name=Width,proto3" json:"Width,omitempty"`
	Height        int32                  `protobuf:"varint,6,opt,name=Height,proto3" json:"Height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaUpdateCoverRequest) Reset() {
	*x = MangaUpdateCoverRequest{}
	mi := &file_manga_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaUpdateCoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaUpdateCoverRequest) ProtoMessage() {}

func (x *MangaUpdateCoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaUpdateCoverRequest.ProtoReflect.Descriptor instead.
func (*MangaUpdateCoverRequest) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{9}
}

func (x *MangaUpdateCoverRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MangaUpdateCoverRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *MangaUpdateCoverRequest) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MangaUpdateCoverRequest) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MangaUpdateCoverRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MangaUpdateCoverRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MangaUpdateCoverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaUpdateCoverResponse) Reset() {
	*x = MangaUpdateCoverResponse{}
	mi := &file_manga_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaUpdateCoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaUpdateCoverResponse) ProtoMessage() {}

func (x *MangaUpdateCoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaUpdateCoverResponse.ProtoReflect.Descriptor instead.
func (*MangaUpdateCoverResponse) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{10}
}

func (x *MangaUpdateCoverResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type MangaPageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Index         int32                  `protobuf:"varint,3,opt,name=Index,proto3" json:"Index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaPageRequest) Reset() {
	*x = MangaPageRequest{}
	mi := &file_manga_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaPageRequest) ProtoMessage() {}

func (x *MangaPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaPageRequest.ProtoReflect.Descriptor instead.
func (*MangaPageRequest) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{11}
}

func (x *MangaPageRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MangaPageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MangaPageRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type MangaPageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentType   string                 `protobuf:"bytes,1,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MangaPageResponse) Reset() {
	*x = MangaPageResponse{}
	mi := &file_manga_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaPageResponse) ProtoMessage() {}

func (x *MangaPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaPageResponse.ProtoReflect.Descriptor instead.
func (*MangaPageResponse) Descriptor() ([]byte, []int) {
	return file_manga_proto_rawDescGZIP(), []int{12}
}

func (x *MangaPageResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *MangaPageResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_manga_proto protoreflect.FileDescriptor

const file_manga_proto_rawDesc = "" +
	"\n" +
	"\vmanga.proto\x1a\vtypes.proto\"\x99\x02\n" +
	"\x10MangaListRequest\x12\x12\n" +
	"\x04User\x18\x01 \x01(\tR\x04User\x12\x10\n" +
	"\x03Tag\x18\x02 \x01(\tR\x03Tag\x12/\n" +
	"\x06Filter\x18\x03 \x01(\x0e2\x17.mangaweb4.types.FilterR\x06Filter\x12\x12\n" +
	"\x04Page\x18\x04 \x01(\x05R\x04Page\x12 \n" +
	"\vItemPerPage\x18\x05 \x01(\x05R\vItemPerPage\x12\x16\n" +
	"\x06Search\x18\x06 \x01(\tR\x06Search\x12.\n" +
	"\x04Sort\x18\a \x01(\x0e2\x1a.mangaweb4.types.SortFieldR\x04Sort\x120\n" +
	"\x05Order\x18\b \x01(\x0e2\x1a.mangaweb4.types.SortOrderR\x05Order\"\x81\x01\n" +
	"\x11MangaListResponse\x12 \n" +
	"\vTagFavorite\x18\x01 \x01(\bR\vTagFavorite\x12\x1c\n" +
	"\tTotalPage\x18\x02 \x01(\x05R\tTotalPage\x12,\n" +
	"\x05Items\x18\x03 \x03(\v2\x16.MangaListResponseItemR\x05Items\"\xb9\x01\n" +
	"\x15MangaListResponseItem\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x05R\x02Id\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12\x1e\n" +
	"\n" +
	"IsFavorite\x18\x03 \x01(\bR\n" +
	"IsFavorite\x12\x16\n" +
	"\x06IsRead\x18\x04 \x01(\bR\x06IsRead\x12\x1c\n" +
	"\tPageCount\x18\x05 \x01(\x05R\tPageCount\x12&\n" +
	"\x0eHasFavoriteTag\x18\x06 \x01(\bR\x0eHasFavoriteTag\"+\n" +
	"\x15MangaThumbnailRequest\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\"N\n" +
	"\x16MangaThumbnailResponse\x12 \n" +
	"\vContentType\x18\x01 \x01(\tR\vContentType\x12\x12\n" +
	"\x04Data\x18\x02 \x01(\fR\x04Data\"<\n" +
	"\x12MangaDetailRequest\x12\x12\n" +
	"\x04User\x18\x01 \x01(\tR\x04User\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\"\x99\x01\n" +
	"\x13MangaDetailResponse\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x1a\n" +
	"\bFavorite\x18\x02 \x01(\bR\bFavorite\x12\x1c\n" +
	"\tPageCount\x18\x03 \x01(\x05R\tPageCount\x12 \n" +
	"\vCurrentPage\x18\x04 \x01(\x05R\vCurrentPage\x12\x12\n" +
	"\x04Tags\x18\x05 \x03(\tR\x04Tags\"]\n" +
	"\x17MangaSetFavoriteRequest\x12\x12\n" +
	"\x04User\x18\x01 \x01(\tR\x04User\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12\x1a\n" +
	"\bFavorite\x18\x03 \x01(\bR\bFavorite\"J\n" +
	"\x18MangaSetFavoriteResponse\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x1a\n" +
	"\bFavorite\x18\x02 \x01(\bR\bFavorite\"\x8d\x01\n" +
	"\x17MangaUpdateCoverRequest\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x14\n" +
	"\x05Index\x18\x02 \x01(\x05R\x05Index\x12\f\n" +
	"\x01X\x18\x03 \x01(\x05R\x01X\x12\f\n" +
	"\x01Y\x18\x04 \x01(\x05R\x01Y\x12\x14\n" +
	"\x05Width\x18\x05 \x01(\x05R\x05Width\x12\x16\n" +
	"\x06Height\x18\x06 \x01(\x05R\x06Height\"4\n" +
	"\x18MangaUpdateCoverResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\"P\n" +
	"\x10MangaPageRequest\x12\x12\n" +
	"\x04User\x18\x01 \x01(\tR\x04User\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12\x14\n" +
	"\x05Index\x18\x03 \x01(\x05R\x05Index\"I\n" +
	"\x11MangaPageResponse\x12 \n" +
	"\vContentType\x18\x01 \x01(\tR\vContentType\x12\x12\n" +
	"\x04Data\x18\x02 \x01(\fR\x04Data2\xec\x02\n" +
	"\x05Manga\x12/\n" +
	"\x04List\x12\x11.MangaListRequest\x1a\x12.MangaListResponse\"\x00\x125\n" +
	"\x06Detail\x12\x13.MangaDetailRequest\x1a\x14.MangaDetailResponse\"\x00\x12>\n" +
	"\tThumbnail\x12\x16.MangaThumbnailRequest\x1a\x17.MangaThumbnailResponse\"\x00\x12D\n" +
	"\vSetFavorite\x12\x18.MangaSetFavoriteRequest\x1a\x19.MangaSetFavoriteResponse\"\x00\x12D\n" +
	"\vUpdateCover\x12\x18.MangaUpdateCoverRequest\x1a\x19.MangaUpdateCoverResponse\"\x00\x12/\n" +
	"\x04Page\x12\x11.MangaPageRequest\x1a\x12.MangaPageResponse\"\x00B-Z+github.com/mangaweb4/mangaweb4-backend/grpcb\x06proto3"

var (
	file_manga_proto_rawDescOnce sync.Once
	file_manga_proto_rawDescData []byte
)

func file_manga_proto_rawDescGZIP() []byte {
	file_manga_proto_rawDescOnce.Do(func() {
		file_manga_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_manga_proto_rawDesc), len(file_manga_proto_rawDesc)))
	})
	return file_manga_proto_rawDescData
}

var file_manga_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_manga_proto_goTypes = []any{
	(*MangaListRequest)(nil),         // 0: MangaListRequest
	(*MangaListResponse)(nil),        // 1: MangaListResponse
	(*MangaListResponseItem)(nil),    // 2: MangaListResponseItem
	(*MangaThumbnailRequest)(nil),    // 3: MangaThumbnailRequest
	(*MangaThumbnailResponse)(nil),   // 4: MangaThumbnailResponse
	(*MangaDetailRequest)(nil),       // 5: MangaDetailRequest
	(*MangaDetailResponse)(nil),      // 6: MangaDetailResponse
	(*MangaSetFavoriteRequest)(nil),  // 7: MangaSetFavoriteRequest
	(*MangaSetFavoriteResponse)(nil), // 8: MangaSetFavoriteResponse
	(*MangaUpdateCoverRequest)(nil),  // 9: MangaUpdateCoverRequest
	(*MangaUpdateCoverResponse)(nil), // 10: MangaUpdateCoverResponse
	(*MangaPageRequest)(nil),         // 11: MangaPageRequest
	(*MangaPageResponse)(nil),        // 12: MangaPageResponse
	(Filter)(0),                      // 13: mangaweb4.types.Filter
	(SortField)(0),                   // 14: mangaweb4.types.SortField
	(SortOrder)(0),                   // 15: mangaweb4.types.SortOrder
}
var file_manga_proto_depIdxs = []int32{
	13, // 0: MangaListRequest.Filter:type_name -> mangaweb4.types.Filter
	14, // 1: MangaListRequest.Sort:type_name -> mangaweb4.types.SortField
	15, // 2: MangaListRequest.Order:type_name -> mangaweb4.types.SortOrder
	2,  // 3: MangaListResponse.Items:type_name -> MangaListResponseItem
	0,  // 4: Manga.List:input_type -> MangaListRequest
	5,  // 5: Manga.Detail:input_type -> MangaDetailRequest
	3,  // 6: Manga.Thumbnail:input_type -> MangaThumbnailRequest
	7,  // 7: Manga.SetFavorite:input_type -> MangaSetFavoriteRequest
	9,  // 8: Manga.UpdateCover:input_type -> MangaUpdateCoverRequest
	11, // 9: Manga.Page:input_type -> MangaPageRequest
	1,  // 10: Manga.List:output_type -> MangaListResponse
	6,  // 11: Manga.Detail:output_type -> MangaDetailResponse
	4,  // 12: Manga.Thumbnail:output_type -> MangaThumbnailResponse
	8,  // 13: Manga.SetFavorite:output_type -> MangaSetFavoriteResponse
	10, // 14: Manga.UpdateCover:output_type -> MangaUpdateCoverResponse
	12, // 15: Manga.Page:output_type -> MangaPageResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_manga_proto_init() }
func file_manga_proto_init() {
	if File_manga_proto != nil {
		return
	}
	file_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_manga_proto_rawDesc), len(file_manga_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manga_proto_goTypes,
		DependencyIndexes: file_manga_proto_depIdxs,
		MessageInfos:      file_manga_proto_msgTypes,
	}.Build()
	File_manga_proto = out.File
	file_manga_proto_goTypes = nil
	file_manga_proto_depIdxs = nil
}
